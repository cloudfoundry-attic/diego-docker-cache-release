#!/bin/sh -e

JOB_NAME=docker_registry
BASE_DIR=/var/vcap

LOG_DIR=$BASE_DIR/sys/log/$JOB_NAME
mkdir -p $LOG_DIR

RUN_DIR=$BASE_DIR/sys/run/$JOB_NAME
mkdir -p $RUN_DIR

PIDFILE=$RUN_DIR/$JOB_NAME.pid

exec 1>> $LOG_DIR/stdout.log
exec 2>> $LOG_DIR/stderr.log

export PATH=$PATH:$BASE_DIR/packages/docker-1.6.2
export DOCKER_HOST=tcp://0.0.0.0:4243

REGISTRY_STORAGE=$BASE_DIR/store/registry
mkdir -p $REGISTRY_STORAGE

case $1 in
start)
  if ! [ -e /dev/full ]; then
    mknod -m 666 /dev/full c 1 7
  fi

  cat $BASE_DIR/packages/docker-registry-2.0.1/docker-registry-2.0.1.tar.gz | \
    docker import - registry:private

  echo $$ > $PIDFILE

  exec docker run \
    -e PATH=/go/bin:/usr/src/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
    -e GOLANG_VERSION=1.4.2 \
    -e GOPATH=/go/src/github.com/docker/distribution/Godeps/_workspace:/go \
    -e DISTRIBUTION_DIR=/go/src/github.com/docker/distribution \
    -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry \
    -p <%= p("docker_registry.address").split(":")[1] %>:5000 \
    -v $REGISTRY_STORAGE:/registry \
    -w /go/src/github.com/docker/distribution \
    registry:private \
    registry cmd/registry/config.yml
  ;;

stop)
  pkill -F $PIDFILE
  ;;

*)
  echo "Usage: ctl {start|stop}"
  ;;

esac
